{
  "input": {
    "input_bam": {
      "class": "File",
      "location": "NIST7035.1.chrM.bam"
    }
  },
  "manifest": [
    {
      "object_id": "0f670f3b-827d-4981-8cab-6a8b50934c14"
    },
    {
      "object_id": "03fbc8f7-bfd5-4048-b533-20010682cb55"
    }
  ],
  "workflow": {
    "cwlVersion": "v1.0",
    "$graph": [
      {
        "inputs": [
          {
            "type": "File",
            "id": "#main/input_bam"
          }
        ],
        "requirements": [
          {
            "class": "InlineJavascriptRequirement"
          },
          {
            "class": "StepInputExpressionRequirement"
          },
          {
            "class": "MultipleInputFeatureRequirement"
          },
          {
            "class": "ScatterFeatureRequirement"
          },
          {
            "class": "SubworkflowFeatureRequirement"
          }
        ],
        "outputs": [
          {
            "type": {
              "items": "string",
              "type": "array"
            },
            "outputSource": "#main/test_scatter/output",
            "id": "#main/output"
          }
        ],
        "class": "Workflow",
        "steps": [
          {
            "scatter": "#main/test_scatter/file",
            "in": [
              {
                "source": "#main/test_subworkflow/output_files",
                "id": "#main/test_scatter/file"
              }
            ],
            "run": "#scatter_test.cwl",
            "id": "#main/test_scatter",
            "out": [
              "#main/test_scatter/output"
            ]
          },
          {
            "in": [
              {
                "source": "#main/input_bam",
                "id": "#main/test_subworkflow/input_bam"
              }
            ],
            "run": "#subworkflow_test.cwl",
            "id": "#main/test_subworkflow",
            "out": [
              "#main/test_subworkflow/output_files"
            ]
          }
        ],
        "id": "#main"
      },
      {
        "inputs": [
          {
            "type": {
              "items": [
                "null",
                "File"
              ],
              "type": "array"
            },
            "id": "#expressiontool_test.cwl/file_array"
          }
        ],
        "requirements": [
          {
            "class": "InlineJavascriptRequirement"
          }
        ],
        "outputs": [
          {
            "type": {
              "items": "File",
              "type": "array"
            },
            "id": "#expressiontool_test.cwl/output"
          }
        ],
        "class": "ExpressionTool",
        "expression": "${\n  var trueFile = [];\n  for (var i = 0; i < inputs.file_array.length; i++){\n    if (inputs.file_array[i] != null){\n      trueFile.push(inputs.file_array[i])\n    }\n  };\n  return {'output': trueFile};\n}\n",
        "id": "#expressiontool_test.cwl"
      },
      {
        "inputs": [
          {
            "type": "File",
            "id": "#initdir_test.cwl/input_bam"
          }
        ],
        "requirements": [
          {
            "class": "InlineJavascriptRequirement"
          },
          {
            "class": "ShellCommandRequirement"
          },
          {
            "dockerPull": "quay.io/cdis/samtools:dev_cloud_support",
            "class": "DockerRequirement"
          },
          {
            "class": "InitialWorkDirRequirement",
            "listing": [
              {
                "entry": "$(inputs.input_bam)",
                "entryname": "$(inputs.input_bam.basename)"
              }
            ]
          },
          {
            "coresMin": 1,
            "ramMin": 100,
            "class": "ResourceRequirement",
            "coresMax": 1
          }
        ],
        "outputs": [
          {
            "secondaryFiles": [
              ".bai"
            ],
            "outputBinding": {
              "glob": "$(inputs.input_bam.basename)"
            },
            "type": "File",
            "id": "#initdir_test.cwl/bam_with_index"
          }
        ],
        "baseCommand": [
          "touch"
        ],
        "id": "#initdir_test.cwl",
        "arguments": [
          {
            "position": 0,
            "valueFrom": "$(inputs.input_bam.basename + '.bai')"
          }
        ],
        "class": "CommandLineTool"
      },
      {
        "inputs": [
          {
            "type": "File",
            "id": "#scatter_test.cwl/file"
          }
        ],
        "requirements": [
          {
            "class": "InlineJavascriptRequirement"
          },
          {
            "class": "ShellCommandRequirement"
          },
          {
            "dockerPull": "alpine",
            "class": "DockerRequirement"
          },
          {
            "coresMin": 1,
            "ramMin": 100,
            "class": "ResourceRequirement",
            "coresMax": 1
          }
        ],
        "stdout": "file_md5",
        "outputs": [
          {
            "outputBinding": {
              "glob": "file_md5",
              "loadContents": true,
              "outputEval": "${\n  var local_md5 = self[0].contents.trim().split(' ')[0]\n  return local_md5\n}\n"
            },
            "type": "string",
            "id": "#scatter_test.cwl/output"
          }
        ],
        "baseCommand": [],
        "class": "CommandLineTool",
        "arguments": [
          {
            "shellQuote": false,
            "position": 0,
            "valueFrom": "md5sum $(inputs.file.path)"
          }
        ],
        "id": "#scatter_test.cwl"
      },
      {
        "inputs": [
          {
            "type": "File",
            "id": "#subworkflow_test.cwl/input_bam"
          }
        ],
        "requirements": [
          {
            "class": "InlineJavascriptRequirement"
          },
          {
            "class": "StepInputExpressionRequirement"
          },
          {
            "class": "MultipleInputFeatureRequirement"
          }
        ],
        "outputs": [
          {
            "type": {
              "items": "File",
              "type": "array"
            },
            "outputSource": "#subworkflow_test.cwl/test_expr/output",
            "id": "#subworkflow_test.cwl/output_files"
          }
        ],
        "class": "Workflow",
        "steps": [
          {
            "in": [
              {
                "source": "#subworkflow_test.cwl/test_initworkdir/bam_with_index",
                "valueFrom": "$([self, self.secondaryFiles[0]])",
                "id": "#subworkflow_test.cwl/test_expr/file_array"
              }
            ],
            "run": "#expressiontool_test.cwl",
            "id": "#subworkflow_test.cwl/test_expr",
            "out": [
              "#subworkflow_test.cwl/test_expr/output"
            ]
          },
          {
            "in": [
              {
                "source": "#subworkflow_test.cwl/input_bam",
                "id": "#subworkflow_test.cwl/test_initworkdir/input_bam"
              }
            ],
            "run": "#initdir_test.cwl",
            "id": "#subworkflow_test.cwl/test_initworkdir",
            "out": [
              "#subworkflow_test.cwl/test_initworkdir/bam_with_index"
            ]
          }
        ],
        "id": "#subworkflow_test.cwl"
      }
    ]
  }
}